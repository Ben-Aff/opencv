图像由像素点构成
每个像素点都有值0-255，表示亮度，值越大亮度越大
图像由R、G、B三个通道构成，黑白图只有一个通道（Opencv中的组成形式是BGR）
因此图像通常由三个矩阵表示
位深度：32(支持透明度)、24(不支持透明通道)
图像的分辨率表示宽和高的像素值
opencv不支持透明度的读取，都会统一读取为RGB三个通道的
图像色彩模式
位图模式
位图模式是图像中最基本的格式，图像只有黑色和白色像素，是色彩模式中占有空间最小的，同样也叫做黑白图，它包含的信息量最少，无法包含图像中的细节，相当于只有0或者1
一副彩色图如果要转换成黑白模式，则一般不能直接转换，需要首先将图像转换成灰度模式
灰度模式
灰度模式即使用单一色调来表示图像，与位图模式不同，不像位图只有0和1，使用256级的灰度来表示图像，一个像素相当于占用8为一个字节，每个像素值使用0到255的亮度值代表，其中0为黑色，255为白色，相当于从黑->灰->白的过度，通常我们所说的黑白照片就是这种模式，与位图模式相比，能表现出一定的细节，占用空间也比位图模式较大
RGB模式
RGB模式为我们经常见到的，被称为真色彩。RGB模式的图像有3个颜色通道，分布为红（Red）,绿（Green）和蓝（Bule），每个都占用8位一个字节来表示颜色信息，这样每个颜色的取值范围为0~255，那么就三种颜色就可以有多种组合，
当三种基色的值相等是，表现出为灰色，三种颜色都为255即为白色，三种颜色都为0，即为黑色
RGB模式的图像占用空间要比位图，灰度图都要大，但表现出的细节更加明显
#读取图片
img=cv2.imread("图片位置")
img=cv2.imread("图片位置",cv2.IMREAD_GRAYSCALE)
#第二个参数表示以灰度图像处理的方式，还可以 cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)的方式读取彩色图片
#展示图片
cv2.imshow("展示的名字",img)
cv2.waitKey(0)      #等待时间,毫秒级,0表示可以任意键结束
cv2.destroyAllWindows()
#保存图片
cv2.imwrite("指定保存的名字",img)
#图片的色彩转换
st=cv.cvtColor(原图片, code[,dst[, dstCn]]
code如gray=cv.cvtColor(image,cv.COLOR_BGR2GRAY)#BGR TO GRAY
      hsv=cv.cvtColor(image,cv.COLOR_BGR2HSV)#BGR TO HSV
#图像对象的创建与赋值
opencv中的图像都是numpy对象
#图像的形状
image.shape